
networks:
  acnetwork:
    driver: bridge
  proxy:
    external: true

volumes:
  static_volume:
  staticfiles_volume:
  media_volume:
  logs_volume:

services:
  afriqconsultingweb:
    build:
      context: .
      dockerfile: Dockerfile
    # Vous pouvez laisser la CMD par défaut du Dockerfile,
    # ou surcharger ici si besoin (préférence: laisser l'ENTRYPOINT piloter).
    command: >
      gunicorn afriqconsulting.wsgi:application
      --bind 0.0.0.0:8000
      --workers 2
      --threads 2
      --timeout 60
      --log-level warning
      --access-logfile /afriqconsulting/logs/gunicorn.access.log
      --error-logfile /afriqconsulting/logs/gunicorn.error.log
    env_file: [.env]
    volumes:
      # Monte le code pour dev/démo. En prod, COMME D’HABITUDE, retirez cette ligne.
      - .:/afriqconsulting
      - static_volume:/afriqconsulting/static
      - staticfiles_volume:/afriqconsulting/staticfiles
      - media_volume:/afriqconsulting/media
      - logs_volume:/afriqconsulting/logs
      # ⚠️ Dev/démo uniquement pour SQLite (à retirer si Postgres)
      - ./db.sqlite3:/afriqconsulting/db.sqlite3
    restart: unless-stopped
    networks: [acnetwork, proxy]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python3 -c \"import urllib.request,sys; \
try: urllib.request.urlopen('http://127.0.0.1:8000/healthz', timeout=2); sys.exit(0) \
except Exception: sys.exit(1)\""
        ]
      interval: 10s
      timeout: 3s
      retries: 12
      start_period: 40s
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy

      # Router HTTPS apex
      - traefik.http.routers.afriq.rule=Host(`afriqconsulting.com`)
      - traefik.http.routers.afriq.entrypoints=websecure
      - traefik.http.routers.afriq.tls.certresolver=lets
      - traefik.http.routers.afriq.service=afriq
      - traefik.http.routers.afriq.middlewares=sec-headers@docker,compress@docker,ratelimit@docker

      # Router HTTPS pour www (optionnel mais recommandé)
#      - traefik.http.routers.afriq-www.rule=Host(`www.afriqconsulting.com`)
#      - traefik.http.routers.afriq-www.entrypoints=websecure
#      - traefik.http.routers.afriq-www.tls.certresolver=lets
#      - traefik.http.routers.afriq-www.service=afriq
#      - traefik.http.routers.afriq-www.middlewares=sec-headers@docker,compress@docker,ratelimit@docker

#      # (Optionnel) Router HTTP → redirection HTTPS
#      - traefik.http.routers.afriq-http.rule=Host(`afriqconsulting.com`,`www.afriqconsulting.com`)
#      - traefik.http.routers.afriq-http.entrypoints=web
#      - traefik.http.routers.afriq-http.middlewares=redir-https@docker

      # Service → port interne
      - traefik.http.services.afriq.loadbalancer.server.port=8000