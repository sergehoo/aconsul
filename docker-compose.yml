services:
  afriqconsultingweb:
    build:
      context: .
      dockerfile: Dockerfile
    # ‚ùå Pas de ports: Traefik s'en charge
    volumes:
      - .:/afriqconsulting/
      - static_volume:/afriqconsulting/static
      - staticfiles_volume:/afriqconsulting/staticfiles
      - media_volume:/afriqconsulting/media
      - logs_volume:/afriqconsulting/static/logs
      - ./db.sqlite3:/afriqconsulting/db.sqlite3
    env_file:
      - ./.env
    restart: always
    networks:
      - default
      - proxy   # üîó R√©seau partag√© avec Traefik
    labels:
      - "traefik.enable=true"

      # === Router HTTPS principal ===
      - "traefik.http.routers.afriqweb.rule=Host(`afriqconsulting.com`)"
      - "traefik.http.routers.afriqweb.entrypoints=websecure"
      - "traefik.http.routers.afriqweb.tls=true"
      - "traefik.http.routers.afriqweb.tls.certresolver=lets"

      # (Optionnel) Router HTTP -> redirection vers HTTPS
      - "traefik.http.routers.afriqweb-http.rule=Host(`site.mondomaine.ci`)"
      - "traefik.http.routers.afriqweb-http.entrypoints=web"
      - "traefik.http.routers.afriqweb-http.middlewares=afriqweb-https-redirect"
      - "traefik.http.middlewares.afriqweb-https-redirect.redirectscheme.scheme=https"

      # === Service (port interne du conteneur) ===
      - "traefik.http.services.afriqweb.loadbalancer.server.port=8000"

      # Middlewares utiles (compression + headers)
      - "traefik.http.routers.afriqweb.middlewares=afriqweb-compress,afriqweb-sec"
      - "traefik.http.middlewares.afriqweb-compress.compress=true"
      - "traefik.http.middlewares.afriqweb-sec.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.afriqweb-sec.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.afriqweb-sec.headers.stsPreload=true"
      - "traefik.http.middlewares.afriqweb-sec.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.afriqweb-sec.headers.browserXssFilter=true"
      - "traefik.http.middlewares.afriqweb-sec.headers.referrerPolicy=no-referrer-when-downgrade"

      # Traefik doit utiliser le bon r√©seau
      - "traefik.docker.network=proxy"

    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  default:
    # ton r√©seau interne au compose
  proxy:
    external: true   # ‚ö†Ô∏è Doit exister et √™tre le m√™me que celui de Traefik
  aq_default:
    external: true   # si tu veux le garder pour d'autres services/compatibilit√©

volumes:
  static_volume:
  staticfiles_volume:
  media_volume:
  logs_volume: